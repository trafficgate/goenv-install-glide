#!/usr/bin/env bash
#
# Summary: Install glide
#
# Usage: goenv install-glide
#
# Install glide to current go version
#
set -e
[ -n "$GOENV_DEBUG" ] && set -x

if [ -z "$GOENV_ROOT" ]; then
    GOENV_ROOT="${HOME}/.goenv"
fi

function parse_options ()
{
    OPTIONS=();
    ARGUMENTS=();
    local arg option index;
    for arg in "$@";
    do
        if [ "${arg:0:1}" = "-" ]; then
            if [ "${arg:1:1}" = "-" ]; then
                OPTIONS[${#OPTIONS[*]}]="${arg:2}";
            else
                index=1;
                while option="${arg:$index:1}"; do
                    [ -n "$option" ] || break;
                    OPTIONS[${#OPTIONS[*]}]="$option";
                    index=$(($index+1));
                done;
            fi;
        else
            ARGUMENTS[${#ARGUMENTS[*]}]="$arg";
        fi;
    done
};

usage() {
  # We can remove the sed fallback once goenv 0.4.0 is widely available.
  goenv-help install-glide 2>/dev/null || sed -ne '/^#/!q;s/.//;s/.//;1,4d;p' < "$0"
  [ -z "$1" ] || exit "$1"
}

unset VERBOSE

parse_options "$@"
for option in "${OPTIONS[@]}"; do
  case "$option" in
  "h" | "help" )
    usage 0
    ;;
  * )
    usage 1
    ;;
  esac
done

export GOPATH=$(goenv prefix)
curl -s https://glide.sh/get | sed -e "/^testVersion()/! s/^testVersion//" | sh
goenv rehash

set +e
GLIDE="$(which glide)"
if [ "$?" = "1" ]; then
  echo "glide not found. Did you add "'$GOBIN'" to your "'$PATH?'
  exit 1
fi
set -e
GLIDE_VERSION=$(glide -v)
echo "$GLIDE_VERSION installed successfully"
